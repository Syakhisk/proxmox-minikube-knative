apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: fibonacci-autoscaling-con
  namespace: default
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/class: "kpa.autoscaling.knative.dev"
        autoscaling.knative.dev/metric: "concurrency"
        autoscaling.knative.dev/target: "200"

        autoscaling.knative.dev/min-scale: "0"
        autoscaling.knative.dev/max-scale: "5"

        # # Make panic window x% of stable window
        # autoscaling.knative.dev/panic-window-percentage: "1.0"

        # Stable window
        # autoscaling.knative.dev/window: "10s"
        autoscaling.knative.dev/window: "30s"

        # Make all requests are handled by the activator (always active)
        # try turning this off so requests can go to container directly
        autoscaling.knative.dev/target-burst-capacity: "-1"

        # If current concurrency is x% of target, scale up (accommodate containerCreating)
        # autoscaling.knative.dev/target-utilization-percentage: "50"

        # # Make 3 pods when scaling from zero
        # autoscaling.knative.dev/activation-scale: "1"
    spec:
      containers:
        - image: dev.local/fibonacci:1.0.0
          resources:
            requests:
              cpu: 200m
              memory: 512M
            limits:
              cpu: 1
              memory: 512M
